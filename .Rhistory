axis.text.x.top = element_text(size=26, color="black", hjust = 0.5, vjust = 9),
axis.text.y.left = element_text(size=26, color="black", hjust=-1.2,vjust=0.5),
axis.text.y.right = element_blank(),
#axis.ticks.y.left  = element_line(colour = 'black', size = 1.0),
#axis.ticks.y.right  = element_line(colour = 'black', size = 1.0),
axis.ticks.x.top = element_line(colour = 'black', size = 1.0),
axis.ticks.x.bottom = element_line(colour = 'black', size = 1.0),
axis.ticks.length=unit(-4, "mm"),
axis.line = element_line(colour = 'black', size = 1, linetype = 'solid',lineend="square"),
legend.position = c(0.35,0.32),
legend.key=element_rect(colour=NA,fill='transparent'),
legend.key.size = unit(0.04, "npc"),
legend.key.width = unit(0.02, "npc"),
legend.background = element_rect(fill=NA),
legend.box='vertical',
legend.title=element_text(size=24, color="black", face= "plain"),
legend.text=element_text(size=18, color="black", face= "plain")
)
# my_colors = c("#E41A1C","#377EB8","#4DAF4A","#984EA3","#FF7F00","#A65628")
my_colors = brewer.pal(8,"Set1")
breaks_col = c("MZ280_1_re","MZ280_2_re","MZ280_3","MZ280_4","MZ280_5","MZ280_6","MZ280_14","MZ280_15")
title_col = c("MZ280")
label_col = c("Vortex  2700 rpm","Mixer  F1  99 rpm","Mixer  F9  99 rpm","Mixer  99°  99 rpm","Mixer  u1  68 rpm","Mixer  U1  39 rpm",
"Mixer  U1  39 rpm repeat","Mixer  U1  39 rpm  30 min")
y_bottom = 1e-6
y_top = 1e4
y_breaks = 6
ticks_bottom = data.frame(x = seq(-30, 0, by = 1), xend = seq(-30, 0, by = 1), y = y_bottom, yend = y_bottom*1.5)
ticks_top = data.frame(x = seq(-29.15, -1.15, by = 1), xend = seq(-29.15, -1.15, by = 1), y = y_top, yend = y_top*0.65)
ggplot(select_sample, aes(x = temperature_corr, y = N_cumIN)) +
geom_point(aes(col = Sample_name),shape=3, size=1.5, stroke=1.5) + mytheme +
scale_colour_manual(title_col,values = my_colors,  breaks = breaks_col,
labels = label_col) +
guides(col = guide_legend(reverse=FALSE,order=1)) +
# Alt键，同时输入0176
scale_x_continuous(name = expression(paste(italic("T")," [°C]")),limits = c(-30, 0.0),breaks=seq(-30,0,by=5),
labels=seq(-30,0,by=5),
minor_breaks=seq(-30,0,by=1), expand = c(0,0),
sec.axis = sec_axis(~ .+273.15, name = expression(paste(italic("T")," [K]")),breaks=seq(245,270,by=5.0))) +
scale_y_continuous(name = expression(paste(italic("N")[m]," [",L^-1,"]")),
limits = c(y_bottom,y_top),
breaks = trans_breaks("log10", function(x) 10 ^ x,n=y_breaks),
labels = trans_format("log10", math_format(10^.x)),
trans = "log10",expand = c(0,0),
sec.axis = sec_axis(~ .)) +
annotation_logticks(base = 10,sides="lr",scaled = TRUE,size = 1.0,
short = unit(2.5,"mm"),
mid = unit(2.5,"mm"),
long = unit(4,"mm")) +
geom_segment(data = ticks_bottom, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)+
geom_segment(data = ticks_top, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)
ggsave(filename="Kai_MZ280_extraction_test_v4.png",plot = last_plot(),device="png",
path="D:/R_program/TINA/MZ280",scale = 1,width = 28, height = 21, units = "cm",dpi = 300, limitsize = TRUE)
# "eps", "ps", "tex" (pictex), "pdf", "jpeg", "tiff", "png", "bmp", "svg" or "wmf"
legend.position = c(0.3,0.32),
legend.key=element_rect(colour=NA,fill='transparent'),
legend.key.size = unit(0.04, "npc"),
legend.key.width = unit(0.02, "npc"),
legend.background = element_rect(fill=NA),
legend.box='vertical',
legend.title=element_text(size=24, color="black", face= "plain"),
legend.text=element_text(size=18, color="black", face= "plain")
)
# my_colors = c("#E41A1C","#377EB8","#4DAF4A","#984EA3","#FF7F00","#A65628")
my_colors = brewer.pal(8,"Set1")
breaks_col = c("MZ280_1_re","MZ280_2_re","MZ280_3","MZ280_4","MZ280_5","MZ280_6","MZ280_14","MZ280_15")
title_col = c("MZ280")
label_col = c("Vortex  2700 rpm","Mixer  F1  99 rpm","Mixer  F9  99 rpm","Mixer  99°  99 rpm","Mixer  u1  68 rpm","Mixer  U1  39 rpm",
"Mixer  U1  39 rpm repeat","Mixer  U1  39 rpm  30 min")
y_bottom = 1e-6
y_top = 1e4
y_breaks = 6
ticks_bottom = data.frame(x = seq(-30, 0, by = 1), xend = seq(-30, 0, by = 1), y = y_bottom, yend = y_bottom*1.5)
ticks_top = data.frame(x = seq(-29.15, -1.15, by = 1), xend = seq(-29.15, -1.15, by = 1), y = y_top, yend = y_top*0.65)
ggplot(select_sample, aes(x = temperature_corr, y = N_cumIN)) +
geom_point(aes(col = Sample_name),shape=3, size=1.5, stroke=1.5) + mytheme +
scale_colour_manual(title_col,values = my_colors,  breaks = breaks_col,
labels = label_col) +
guides(col = guide_legend(reverse=FALSE,order=1)) +
# Alt键，同时输入0176
scale_x_continuous(name = expression(paste(italic("T")," [°C]")),limits = c(-30, 0.0),breaks=seq(-30,0,by=5),
labels=seq(-30,0,by=5),
minor_breaks=seq(-30,0,by=1), expand = c(0,0),
sec.axis = sec_axis(~ .+273.15, name = expression(paste(italic("T")," [K]")),breaks=seq(245,270,by=5.0))) +
scale_y_continuous(name = expression(paste(italic("N")[m]," [",L^-1,"]")),
limits = c(y_bottom,y_top),
breaks = trans_breaks("log10", function(x) 10 ^ x,n=y_breaks),
labels = trans_format("log10", math_format(10^.x)),
trans = "log10",expand = c(0,0),
sec.axis = sec_axis(~ .)) +
annotation_logticks(base = 10,sides="lr",scaled = TRUE,size = 1.0,
short = unit(2.5,"mm"),
mid = unit(2.5,"mm"),
long = unit(4,"mm")) +
geom_segment(data = ticks_bottom, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)+
geom_segment(data = ticks_top, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)
ggsave(filename="Kai_MZ280_extraction_test_v4.png",plot = last_plot(),device="png",
path="D:/R_program/TINA/MZ280",scale = 1,width = 28, height = 21, units = "cm",dpi = 300, limitsize = TRUE)
# "eps", "ps", "tex" (pictex), "pdf", "jpeg", "tiff", "png", "bmp", "svg" or "wmf"
legend.position = c(0.25,0.32),
legend.key=element_rect(colour=NA,fill='transparent'),
legend.key.size = unit(0.04, "npc"),
legend.key.width = unit(0.02, "npc"),
legend.background = element_rect(fill=NA),
legend.box='vertical',
legend.title=element_text(size=24, color="black", face= "plain"),
legend.text=element_text(size=18, color="black", face= "plain")
)
# my_colors = c("#E41A1C","#377EB8","#4DAF4A","#984EA3","#FF7F00","#A65628")
my_colors = brewer.pal(8,"Set1")
breaks_col = c("MZ280_1_re","MZ280_2_re","MZ280_3","MZ280_4","MZ280_5","MZ280_6","MZ280_14","MZ280_15")
title_col = c("MZ280")
label_col = c("Vortex  2700 rpm","Mixer  F1  99 rpm","Mixer  F9  99 rpm","Mixer  99°  99 rpm","Mixer  u1  68 rpm","Mixer  U1  39 rpm",
"Mixer  U1  39 rpm repeat","Mixer  U1  39 rpm  30 min")
y_bottom = 1e-6
y_top = 1e4
y_breaks = 6
ticks_bottom = data.frame(x = seq(-30, 0, by = 1), xend = seq(-30, 0, by = 1), y = y_bottom, yend = y_bottom*1.5)
ticks_top = data.frame(x = seq(-29.15, -1.15, by = 1), xend = seq(-29.15, -1.15, by = 1), y = y_top, yend = y_top*0.65)
ggplot(select_sample, aes(x = temperature_corr, y = N_cumIN)) +
geom_point(aes(col = Sample_name),shape=3, size=1.5, stroke=1.5) + mytheme +
scale_colour_manual(title_col,values = my_colors,  breaks = breaks_col,
labels = label_col) +
guides(col = guide_legend(reverse=FALSE,order=1)) +
# Alt键，同时输入0176
scale_x_continuous(name = expression(paste(italic("T")," [°C]")),limits = c(-30, 0.0),breaks=seq(-30,0,by=5),
labels=seq(-30,0,by=5),
minor_breaks=seq(-30,0,by=1), expand = c(0,0),
sec.axis = sec_axis(~ .+273.15, name = expression(paste(italic("T")," [K]")),breaks=seq(245,270,by=5.0))) +
scale_y_continuous(name = expression(paste(italic("N")[m]," [",L^-1,"]")),
limits = c(y_bottom,y_top),
breaks = trans_breaks("log10", function(x) 10 ^ x,n=y_breaks),
labels = trans_format("log10", math_format(10^.x)),
trans = "log10",expand = c(0,0),
sec.axis = sec_axis(~ .)) +
annotation_logticks(base = 10,sides="lr",scaled = TRUE,size = 1.0,
short = unit(2.5,"mm"),
mid = unit(2.5,"mm"),
long = unit(4,"mm")) +
geom_segment(data = ticks_bottom, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)+
geom_segment(data = ticks_top, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)
ggsave(filename="Kai_MZ280_extraction_test_v4.png",plot = last_plot(),device="png",
path="D:/R_program/TINA/MZ280",scale = 1,width = 28, height = 21, units = "cm",dpi = 300, limitsize = TRUE)
# "eps", "ps", "tex" (pictex), "pdf", "jpeg", "tiff", "png", "bmp", "svg" or "wmf"
graphics.off()
mytheme <- theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "npc"),
panel.background = element_rect(fill='transparent'),
#  panel.border = element_rect(linetype = "solid", color="black",size=1,fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor= element_blank(),
axis.title.y.left = element_text(size=28, color="black", hjust = 0.5, vjust = 7.5),
axis.title.y.right = element_blank(),
axis.title.x.top = element_text(size=28, color="black", hjust = 0.5, vjust = 12),
axis.title.x.bottom = element_text(size=28, color="black", hjust = 0.5, vjust = -10.5),
axis.text.x.bottom = element_text(size=26, color="black", hjust = 0.5, vjust = -8.0),
axis.text.x.top = element_text(size=26, color="black", hjust = 0.5, vjust = 9),
axis.text.y.left = element_text(size=26, color="black", hjust=-1.2,vjust=0.5),
axis.text.y.right = element_blank(),
#axis.ticks.y.left  = element_line(colour = 'black', size = 1.0),
#axis.ticks.y.right  = element_line(colour = 'black', size = 1.0),
axis.ticks.x.top = element_line(colour = 'black', size = 1.0),
axis.ticks.x.bottom = element_line(colour = 'black', size = 1.0),
axis.ticks.length=unit(-4, "mm"),
axis.line = element_line(colour = 'black', size = 1, linetype = 'solid',lineend="square"),
legend.position = c(0.25,0.32),
legend.key=element_rect(colour=NA,fill='transparent'),
legend.key.size = unit(0.04, "npc"),
legend.key.width = unit(0.02, "npc"),
legend.background = element_rect(fill=NA),
legend.box='vertical',
legend.title=element_text(size=24, color="black", face= "plain"),
legend.text=element_text(size=18, color="black", face= "plain")
)
# my_colors = c("#E41A1C","#377EB8","#4DAF4A","#984EA3","#FF7F00","#A65628")
my_colors = brewer.pal(8,"Set1")
breaks_col = c("MZ280_1_re","MZ280_2_re","MZ280_3","MZ280_4","MZ280_5","MZ280_6","MZ280_14","MZ280_15")
title_col = c("MZ280")
label_col = c("Vortex  2700 rpm","Mixer  F1  99 rpm","Mixer  F9  99 rpm","Mixer  99°  99 rpm","Mixer  u1  68 rpm","Mixer  U1  39 rpm",
"Mixer  U1  39 rpm repeat","Mixer  U1  39 rpm  30 min")
y_bottom = 1e-6
y_top = 1e4
y_breaks = 6
ticks_bottom = data.frame(x = seq(-30, 0, by = 1), xend = seq(-30, 0, by = 1), y = y_bottom, yend = y_bottom*1.5)
ticks_top = data.frame(x = seq(-29.15, -1.15, by = 1), xend = seq(-29.15, -1.15, by = 1), y = y_top, yend = y_top*0.65)
ggplot(select_sample, aes(x = temperature_corr, y = N_cumIN)) +
geom_point(aes(col = Sample_name),shape=3, size=1.5, stroke=1.5) + mytheme +
scale_colour_manual(title_col,values = my_colors,  breaks = breaks_col,
labels = label_col) +
guides(col = guide_legend(reverse=FALSE,order=1)) +
# Alt键，同时输入0176
scale_x_continuous(name = expression(paste(italic("T")," [°C]")),limits = c(-30, 0.0),breaks=seq(-30,0,by=5),
labels=seq(-30,0,by=5),
minor_breaks=seq(-30,0,by=1), expand = c(0,0),
sec.axis = sec_axis(~ .+273.15, name = expression(paste(italic("T")," [K]")),breaks=seq(245,270,by=5.0))) +
scale_y_continuous(name = expression(paste(italic("N")[m]," [",L^-1,"]")),
limits = c(y_bottom,y_top),
breaks = trans_breaks("log10", function(x) 10 ^ x,n=y_breaks),
labels = trans_format("log10", math_format(10^.x)),
trans = "log10",expand = c(0,0),
sec.axis = sec_axis(~ .)) +
annotation_logticks(base = 10,sides="lr",scaled = TRUE,size = 1.0,
short = unit(2.5,"mm"),
mid = unit(2.5,"mm"),
long = unit(4,"mm")) +
geom_segment(data = ticks_bottom, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)+
geom_segment(data = ticks_top, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)
ggsave(filename="Kai_MZ280_extraction_test_v4.png",plot = last_plot(),device="png",
path="D:/R_program/TINA/MZ280",scale = 1,width = 28, height = 21, units = "cm",dpi = 300, limitsize = TRUE)
# "eps", "ps", "tex" (pictex), "pdf", "jpeg", "tiff", "png", "bmp", "svg" or "wmf"
graphics.off()
mytheme <- theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "npc"),
panel.background = element_rect(fill='transparent'),
#  panel.border = element_rect(linetype = "solid", color="black",size=1,fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor= element_blank(),
axis.title.y.left = element_text(size=28, color="black", hjust = 0.5, vjust = 7.5),
axis.title.y.right = element_blank(),
axis.title.x.top = element_text(size=28, color="black", hjust = 0.5, vjust = 12),
axis.title.x.bottom = element_text(size=28, color="black", hjust = 0.5, vjust = -10.5),
axis.text.x.bottom = element_text(size=26, color="black", hjust = 0.5, vjust = -8.0),
axis.text.x.top = element_text(size=26, color="black", hjust = 0.5, vjust = 9),
axis.text.y.left = element_text(size=26, color="black", hjust=-1.2,vjust=0.5),
axis.text.y.right = element_blank(),
#axis.ticks.y.left  = element_line(colour = 'black', size = 1.0),
#axis.ticks.y.right  = element_line(colour = 'black', size = 1.0),
axis.ticks.x.top = element_line(colour = 'black', size = 1.0),
axis.ticks.x.bottom = element_line(colour = 'black', size = 1.0),
axis.ticks.length=unit(-4, "mm"),
axis.line = element_line(colour = 'black', size = 1, linetype = 'solid',lineend="square"),
legend.position = c(0.25,0.32),
legend.key=element_rect(colour=NA,fill='transparent'),
legend.key.size = unit(0.04, "npc"),
legend.key.width = unit(0.02, "npc"),
legend.background = element_rect(fill=NA),
legend.box='vertical',
legend.title=element_text(size=24, color="black", face= "plain"),
legend.text=element_text(size=18, color="black", face= "plain")
)
# my_colors = c("#E41A1C","#377EB8","#4DAF4A","#984EA3","#FF7F00","#A65628")
my_colors = brewer.pal(8,"Set1")
breaks_col = c("MZ280_1_re","MZ280_2_re","MZ280_3","MZ280_4","MZ280_5","MZ280_6","MZ280_14","MZ280_15")
title_col = c("MZ280")
label_col = c("Vortex  2700 rpm","Mixer  F1  99 rpm","Mixer  F9  99 rpm","Mixer  99°  99 rpm","Mixer  u1  68 rpm","Mixer  U1  39 rpm",
"Mixer  U1  39 rpm repeat","Mixer  U1  39 rpm  30 min")
y_bottom = 1e-6
y_top = 1e4
y_breaks = 6
ticks_bottom = data.frame(x = seq(-30, 0, by = 1), xend = seq(-30, 0, by = 1), y = y_bottom, yend = y_bottom*1.5)
ticks_top = data.frame(x = seq(-29.15, -1.15, by = 1), xend = seq(-29.15, -1.15, by = 1), y = y_top, yend = y_top*0.65)
ggplot(select_sample, aes(x = temperature_corr, y = N_cumIN)) +
geom_point(aes(col = Sample_name),shape=3, size=1.5, stroke=1.5) + mytheme +
scale_colour_manual(title_col,values = my_colors,  breaks = breaks_col,
labels = label_col) +
guides(col = guide_legend(reverse=FALSE,order=1)) +
# Alt键，同时输入0176
scale_x_continuous(name = expression(paste(italic("T")," [°C]")),limits = c(-30, 0.0),breaks=seq(-30,0,by=5),
labels=seq(-30,0,by=5),
minor_breaks=seq(-30,0,by=1), expand = c(0,0),
sec.axis = sec_axis(~ .+273.15, name = expression(paste(italic("T")," [K]")),breaks=seq(245,270,by=5.0))) +
scale_y_continuous(name = expression(paste(italic("N")[m]," [",L^-1,"]")),
limits = c(y_bottom,y_top),
breaks = trans_breaks("log10", function(x) 10 ^ x,n=y_breaks),
labels = trans_format("log10", math_format(10^.x)),
trans = "log10",expand = c(0,0),
sec.axis = sec_axis(~ .)) +
annotation_logticks(base = 10,sides="l",scaled = TRUE,size = 1.0,
short = unit(2.5,"mm"),
mid = unit(2.5,"mm"),
long = unit(4,"mm")) +
geom_segment(data = ticks_bottom, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)+
geom_segment(data = ticks_top, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)
ggsave(filename="Kai_MZ280_extraction_test_v4_2.png",plot = last_plot(),device="png",
path="D:/R_program/TINA/MZ280",scale = 1,width = 28, height = 21, units = "cm",dpi = 300, limitsize = TRUE)
# "eps", "ps", "tex" (pictex), "pdf", "jpeg", "tiff", "png", "bmp", "svg" or "wmf"
graphics.off()
mytheme <- theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "npc"),
panel.background = element_rect(fill='transparent'),
#  panel.border = element_rect(linetype = "solid", color="black",size=1,fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor= element_blank(),
axis.title.y.left = element_text(size=28, color="black", hjust = 0.5, vjust = 7.5),
axis.title.y.right = element_blank(),
axis.title.x.top = element_text(size=28, color="black", hjust = 0.5, vjust = 12),
axis.title.x.bottom = element_text(size=28, color="black", hjust = 0.5, vjust = -10.5),
axis.text.x.bottom = element_text(size=26, color="black", hjust = 0.5, vjust = -8.0),
axis.text.x.top = element_text(size=26, color="black", hjust = 0.5, vjust = 9),
axis.text.y.left = element_text(size=26, color="black", hjust=-1.2,vjust=0.5),
axis.text.y.right = element_blank(),
axis.ticks.y.left  = element_blank(),
axis.ticks.y.right  = element_blank(),
axis.ticks.x.top = element_line(colour = 'black', size = 1.0),
axis.ticks.x.bottom = element_line(colour = 'black', size = 1.0),
axis.ticks.length=unit(-4, "mm"),
axis.line = element_line(colour = 'black', size = 1, linetype = 'solid',lineend="square"),
legend.position = c(0.25,0.32),
legend.key=element_rect(colour=NA,fill='transparent'),
legend.key.size = unit(0.04, "npc"),
legend.key.width = unit(0.02, "npc"),
legend.background = element_rect(fill=NA),
legend.box='vertical',
legend.title=element_text(size=24, color="black", face= "plain"),
legend.text=element_text(size=18, color="black", face= "plain")
)
# my_colors = c("#E41A1C","#377EB8","#4DAF4A","#984EA3","#FF7F00","#A65628")
my_colors = brewer.pal(8,"Set1")
breaks_col = c("MZ280_1_re","MZ280_2_re","MZ280_3","MZ280_4","MZ280_5","MZ280_6","MZ280_14","MZ280_15")
title_col = c("MZ280")
label_col = c("Vortex  2700 rpm","Mixer  F1  99 rpm","Mixer  F9  99 rpm","Mixer  99°  99 rpm","Mixer  u1  68 rpm","Mixer  U1  39 rpm",
"Mixer  U1  39 rpm repeat","Mixer  U1  39 rpm  30 min")
y_bottom = 1e-6
y_top = 1e4
y_breaks = 6
ticks_bottom = data.frame(x = seq(-30, 0, by = 1), xend = seq(-30, 0, by = 1), y = y_bottom, yend = y_bottom*1.5)
ticks_top = data.frame(x = seq(-29.15, -1.15, by = 1), xend = seq(-29.15, -1.15, by = 1), y = y_top, yend = y_top*0.65)
ggplot(select_sample, aes(x = temperature_corr, y = N_cumIN)) +
geom_point(aes(col = Sample_name),shape=3, size=1.5, stroke=1.5) + mytheme +
scale_colour_manual(title_col,values = my_colors,  breaks = breaks_col,
labels = label_col) +
guides(col = guide_legend(reverse=FALSE,order=1)) +
# Alt键，同时输入0176
scale_x_continuous(name = expression(paste(italic("T")," [°C]")),limits = c(-30, 0.0),breaks=seq(-30,0,by=5),
labels=seq(-30,0,by=5),
minor_breaks=seq(-30,0,by=1), expand = c(0,0),
sec.axis = sec_axis(~ .+273.15, name = expression(paste(italic("T")," [K]")),breaks=seq(245,270,by=5.0))) +
scale_y_continuous(name = expression(paste(italic("N")[m]," [",L^-1,"]")),
limits = c(y_bottom,y_top),
breaks = trans_breaks("log10", function(x) 10 ^ x,n=y_breaks),
labels = trans_format("log10", math_format(10^.x)),
trans = "log10",expand = c(0,0),
sec.axis = sec_axis(~ .)) +
annotation_logticks(base = 10,sides="l",scaled = TRUE,size = 1.0,
short = unit(2.5,"mm"),
mid = unit(2.5,"mm"),
long = unit(4,"mm")) +
geom_segment(data = ticks_bottom, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)+
geom_segment(data = ticks_top, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)
ggsave(filename="Kai_MZ280_extraction_test_v4_2.png",plot = last_plot(),device="png",
path="D:/R_program/TINA/MZ280",scale = 1,width = 28, height = 21, units = "cm",dpi = 300, limitsize = TRUE)
# "eps", "ps", "tex" (pictex), "pdf", "jpeg", "tiff", "png", "bmp", "svg" or "wmf"
y_bottom = 1e-6
y_top = 1e4
y_breaks = 6
ticks_bottom = data.frame(x = seq(-30, 0, by = 1), xend = seq(-30, 0, by = 1), y = y_bottom, yend = y_bottom*1.5)
ticks_top = data.frame(x = seq(-29.15, -0.15, by = 1), xend = seq(-29.15, -0.15, by = 1), y = y_top, yend = y_top*0.65)
ggplot(select_sample, aes(x = temperature_corr, y = N_cumIN)) +
geom_point(aes(col = Sample_name),shape=3, size=1.5, stroke=1.5) + mytheme +
scale_colour_manual(title_col,values = my_colors,  breaks = breaks_col,
labels = label_col) +
guides(col = guide_legend(reverse=FALSE,order=1)) +
# Alt键，同时输入0176
scale_x_continuous(name = expression(paste(italic("T")," [°C]")),limits = c(-30, 0.0),breaks=seq(-30,0,by=5),
labels=seq(-30,0,by=5),
minor_breaks=seq(-30,0,by=1), expand = c(0,0),
sec.axis = sec_axis(~ .+273.15, name = expression(paste(italic("T")," [K]")),breaks=seq(245,270,by=5.0))) +
scale_y_continuous(name = expression(paste(italic("N")[m]," [",L^-1,"]")),
limits = c(y_bottom,y_top),
breaks = trans_breaks("log10", function(x) 10 ^ x,n=y_breaks),
labels = trans_format("log10", math_format(10^.x)),
trans = "log10",expand = c(0,0),
sec.axis = sec_axis(~ .)) +
annotation_logticks(base = 10,sides="l",scaled = TRUE,size = 1.0,
short = unit(2.5,"mm"),
mid = unit(2.5,"mm"),
long = unit(4,"mm")) +
geom_segment(data = ticks_bottom, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)+
geom_segment(data = ticks_top, aes(x = x, y = y, xend = xend, yend = yend),size = 1.0)
ggsave(filename="Kai_MZ280_extraction_test_v4_2.png",plot = last_plot(),device="png",
path="D:/R_program/TINA/MZ280",scale = 1,width = 28, height = 21, units = "cm",dpi = 300, limitsize = TRUE)
# "eps", "ps", "tex" (pictex), "pdf", "jpeg", "tiff", "png", "bmp", "svg" or "wmf"
seq(-29.15, -0.15, by = 1)
install.packages("DRIP")
require("DRIP")
help(threeStageParSel)
load(brain)
load("brain")
brain
rm(list = ls())    # clear the environment
cat("\014")        # clear the console
setwd('D:/R_program/R_DRIP')
install.packages("DRIP")
install.packages("DRIP")
require("DRIP")
brain
load(brain)
load("brain")
image(brain)
image(peppers)
image(stopsign)
image(kid)
image(lena)
image(circles)
image(sar)
# NOT RUN {
data(sar)
stepEdge = stepEdgeLCK(sar, bandwidth=4, thresh=20)
stepEdge1 = modify2(bandwidth=4, stepEdge)
fit = threeStage(image=sar, bandwidth=4, edge1=
stepEdge1, edge2=array(0, rep(ncol(sar), 2)))
# }
image(fit)
data(peppers)
image(peppers)
step.edges = stepEdgeLLK(peppers, 9, 17) # Step edge detection
roof.edges = roofEdge(peppers, 6, 3000, edge1=step.edges) # Roof edge detection
parSel = threeStageParSel(image=peppers, edge1=step.edges,
edge2=roof.edges, bandwidth=4:5) # Time consuming
image(parSel)
parSel = threeStageParSel(image=peppers, edge1=step.edges,edge2=roof.edges, bandwidth=4:5) # Time consuming
parSel = threeStageParSel(image=peppers, edge1=step.edges,edge2=roof.edges, bandwidth=4) # Time consuming
image(parSel)
data(peppers)
image(peppers)
step.edges = stepEdgeLLK(peppers, 9, 17) # Step edge detection
roof.edges = roofEdge(peppers, 6, 3000, edge1=step.edges) # Roof edge detection
parSel = threeStageParSel(image=peppers, edge1=step.edges,edge2=roof.edges, bandwidth=4:5) # Time consuming
image(parSel)
rm(list = ls())    # clear the environment
cat("\014")        # clear the console
setwd('D:/R_program/TINA')
# Inject outliers into data.
cars1 <- cars[1:30, ]  # original data
cars_outliers <- data.frame(speed=c(19,19,20,20,20), dist=c(190, 186, 210, 220, 218))  # introduce outliers.
cars2 <- rbind(cars1, cars_outliers)  # data with outliers.
# Plot of data with outliers.
par(mfrow=c(1, 2))
plot(cars2$speed, cars2$dist, xlim=c(0, 28), ylim=c(0, 230), main="With Outliers", xlab="speed", ylab="dist", pch="*", col="red", cex=2)
abline(lm(dist ~ speed, data=cars2), col="blue", lwd=3, lty=2)
# Plot of original data without outliers. Note the change in slope (angle) of best fit line.
plot(cars1$speed, cars1$dist, xlim=c(0, 28), ylim=c(0, 230), main="Outliers removed \n A much better fit!", xlab="speed", ylab="dist", pch="*", col="red", cex=2)
abline(lm(dist ~ speed, data=cars1), col="blue", lwd=3, lty=2)
url <- "http://rstatistics.net/wp-content/uploads/2015/09/ozone.csv"
# alternate source:  https://raw.githubusercontent.com/selva86/datasets/master/ozone.csv
inputData <- read.csv(url)  # import data
outlier_values <- boxplot.stats(inputData$pressure_height)$out  # outlier values.
boxplot(inputData$pressure_height, main="Pressure Height", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
url <- "http://rstatistics.net/wp-content/uploads/2015/09/ozone.csv"
ozone <- read.csv(url)
# For categorical variable
boxplot(ozone_reading ~ Month, data=ozone, main="Ozone reading across months")  # clear pattern is noticeable.
boxplot(ozone_reading ~ Day_of_week, data=ozone, main="Ozone reading for days of week")  # this may not be significant, as day of week variable is a subset of the month var.
# For categorical variable
boxplot(ozone_reading ~ Month, data=ozone, main="Ozone reading across months")  # clear pattern is noticeable.
# For continuous variable (convert to categorical if needed.)
boxplot(ozone_reading ~ pressure_height, data=ozone, main="Boxplot for Pressure height (continuos var) vs Ozone")
boxplot(ozone_reading ~ cut(pressure_height, pretty(inputData$pressure_height)), data=ozone, main="Boxplot for Pressure height (categorial) vs Ozone", cex.axis=0.5)
mod <- lm(ozone_reading ~ ., data=ozone)
cooksd <- cooks.distance(mod)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
influential <- as.numeric(names(cooksd)[(cooksd > 4*mean(cooksd, na.rm=T))])  # influential row numbers
head(ozone[influential, ])  # influential observations.
car::outlierTest(mod)
set.seed(1234)
y=rnorm(100)
outlier(y)
install.packages("outliers")
require("outliers")
require("outliers")
set.seed(1234)
y=rnorm(100)
outlier(y)
outlier(y,opposite=TRUE)
y
dim(y) <- c(20,5)  # convert it to a matrix
outlier(y)
outlier(y,opposite=TRUE)
set.seed(1234)
x = rnorm(10)
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq")  # chi-sq scores => (x - mean(x))^2/var(x)
scores(x, type="t")  # t scores
scores(x, type="chisq", prob=0.9)  # beyond 90th %ile based on chi-sq
scores(x, type="chisq", prob=0.95)  # beyond 95th %ile
scores(x, type="z", prob=0.95)  # beyond 95th %ile based on z-scores
scores(x, type="t", prob=0.95)  # beyond 95th %ile based on t-scores
x = rnorm(10)
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq")  # chi-sq scores => (x - mean(x))^2/var(x)
scores(x, type="t")  # t scores
scores(x, type="chisq", prob=0.9)  # beyond 90th %ile based on chi-sq
scores(x, type="chisq", prob=0.95)  # beyond 95th %ile
scores(x, type="z", prob=0.95)  # beyond 95th %ile based on z-scores
scores(x, type="t", prob=0.95)  # beyond 95th %ile based on t-scores
scores(x)
scores(x,prob=1)
scores(x,prob=0.5)
scores(x,prob=0.1)
scores(x,prob=0.93)
scores(x,type="iqr")
scores(x,type="mad")
scores(x,prob=0)
x
x <- ozone$pressure_height
x
qnt <- quantile(x, probs=c(.25, .75), na.rm = T)
qnt
caps <- quantile(x, probs=c(.05, .95), na.rm = T)
caps
H <- 1.5 * IQR(x, na.rm = T)
IQR(x, na.rm = T)
H <- 1.5 * IQR(x, na.rm = T)
H <- 1.5 * IQR(x, na.rm = T)
x[x < (qnt[1] - H)] <- caps[1]
x[x > (qnt[2] + H)] <- caps[2]
install.packages("outliersO3")
install.packages("OutliersO3")
require("OutliersO3")
data(Election2005, package="mbgraphic")
install.packages("mbgraphic")
require("mbgraphic")
